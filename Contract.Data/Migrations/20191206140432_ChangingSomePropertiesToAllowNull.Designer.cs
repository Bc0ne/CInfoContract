// <auto-generated />
using System;
using Contract.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Contract.Data.Migrations
{
    [DbContext(typeof(ContractDbContext))]
    [Migration("20191206140432_ChangingSomePropertiesToAllowNull")]
    partial class ChangingSomePropertiesToAllowNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Contract.Core.Contract.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractCode")
                        .IsRequired();

                    b.Property<DateTime>("CreationTime");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Contract.Core.Contract.ContractData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContractId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("CurrentBalanceCurrency");

                    b.Property<decimal>("CurrentBalanceValue");

                    b.Property<DateTime?>("DateAccountOpened");

                    b.Property<DateTime?>("DateOfLastPayment");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<decimal?>("InstallmentAmountValue");

                    b.Property<int?>("InstallmentlAmountCurrency");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("NextPaymentDate");

                    b.Property<int?>("OriginalAmountCurrency");

                    b.Property<decimal?>("OriginalAmountValue");

                    b.Property<int?>("OverdueBalanceCurrency");

                    b.Property<decimal?>("OverdueBalanceValue");

                    b.Property<int>("PhaseOfContract");

                    b.Property<DateTime?>("RealEndDate");

                    b.HasKey("Id");

                    b.HasIndex("ContractId")
                        .IsUnique();

                    b.ToTable("ContractsData");
                });

            modelBuilder.Entity("Contract.Core.Individual.Individual", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContractId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CustomerCode")
                        .IsRequired();

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<int?>("Gender");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("NationalId");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("Contract.Core.SubjectRole.SubjectRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContractId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CustomerCode")
                        .IsRequired();

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int?>("GuaranteeAmountCurrency");

                    b.Property<decimal?>("GuaranteeAmountValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("RoleOfCustomer");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("SubjectRole");
                });

            modelBuilder.Entity("Contract.Core.Contract.ContractData", b =>
                {
                    b.HasOne("Contract.Core.Contract.Contract", "Contract")
                        .WithOne("ContractData")
                        .HasForeignKey("Contract.Core.Contract.ContractData", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Contract.Core.Individual.Individual", b =>
                {
                    b.HasOne("Contract.Core.Contract.Contract", "Contract")
                        .WithMany("Individuals")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Contract.Core.SubjectRole.SubjectRole", b =>
                {
                    b.HasOne("Contract.Core.Contract.Contract", "Contract")
                        .WithMany("SubjectRoles")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
